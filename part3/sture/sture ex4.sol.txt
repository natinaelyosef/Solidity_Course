//////////////////4: Choice Lookup

// SPDX-License-Identifier: MIT
pragma solidity 0.8.20;

contract Contract {
	enum Choices { Yes, No }
	  struct Vote {
        Choices choice;
        address voter;
    }

    Vote[] public votes;

    function createVote(Choices choice) external {
        Vote memory newVote = Vote(choice, msg.sender);
        votes.push(newVote);
    }

    function getVoteByAddress(address voter) internal view returns (Vote memory) {
        for (uint i = 0; i < votes.length; i++) {
            if (votes[i].voter == voter) {
                return votes[i];
            }
        }
        revert("Vote not found");
    }

    function hasVoted(address voter) external view returns (bool) {
        return getVoteByAddress(voter).voter != address(0);
    }

    function findChoice(address voter) external view returns (Choices) {
        return getVoteByAddress(voter).choice;
    }



 
}
